{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","isFirstPage","isLastPage","className","classNames","disabled","href","onClick","event","preventDefault","map","page","active","defaultProps","items","App","useState","setPerPage","setCurrentPage","length","firstLiItem","lastLiItem","itemsPerPage","id","value","onChange","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"mLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAA8B,IAAhBL,EACdM,EAAaN,IAAgBE,EAgBnC,OACE,qBAAIK,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAUJ,IAAnD,SACE,mBACE,UAAQ,WACRE,UAAU,YACVG,KAAK,QACL,gBAAeL,EACfM,QAtBgB,SAACC,GACvBA,EAAMC,iBACc,IAAhBb,GACFC,EAAaD,EAAc,IAczB,oBAWDT,EAAW,EAAGW,GAAUY,KAAI,SAAAC,GAAI,OAC/B,oBACER,UAAWC,IAAW,YAAa,CACjCQ,OAAQhB,IAAgBe,IAF5B,SAOE,mBACE,UAAQ,WACRR,UAAU,YACVG,KAAI,WAAMK,GACVJ,QAAS,SAACC,GACRA,EAAMC,iBACNZ,EAAac,IANjB,SASGA,KAZEA,MAiBT,oBAAIR,UAAWC,IACb,YACA,CAAEC,SAAUH,IAFd,SAKE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeJ,EACfK,QArDgB,SAACC,GACvBA,EAAMC,iBACFb,IAAgBE,GAClBD,EAAaD,EAAc,IA6CzB,wBAcRH,EAAWoB,aAAe,CACxBjB,YAAa,G,UCtFTkB,EAAQ3B,EAAW,EAAG,IACzBuB,KAAI,SAAAnB,GAAC,qBAAYA,MAEPwB,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOrB,EAAP,KAAgBsB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOpB,EAAP,KAAoBsB,EAApB,KAEMxB,EAAQoB,EAAMK,OACdC,EAAczB,GAAWC,EAAc,GAAK,EAC5CyB,EAAa1B,EAAUC,EAAcF,EACvCC,EAAUC,EACVF,EACE4B,EAAenC,EAAWiC,EAAaC,GAY7C,OACE,sBAAKlB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiCwB,EADjC,cACkDC,EADlD,eACmE3B,EADnE,OAIA,sBAAKS,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACRoB,GAAG,kBACHpB,UAAU,eACVqB,MAAO7B,EACP8B,SAxBO,SAACjB,GAChBS,GAAYT,EAAMkB,OAAOF,OACzBN,EAAe,IAiBT,SArBQ,CAAC,EAAG,EAAG,GAAI,IA4BRR,KAAI,SAAAiB,GAAM,OACjB,wBAAQH,MAAOG,EAAf,SAAqCA,GAATA,UAKlC,uBAAOC,QAAQ,kBAAkBzB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aApCe,SAACc,GACpBO,EAAeP,MAsCb,6BACGW,EAAaZ,KAAI,SAACmB,GAAD,OAChB,oBAAI,UAAQ,OAAZ,wBAAuCA,IAAfA,YC/DlCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.562b38d2.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage?: number,\n  onPageChange: (page: number) => void,\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === lastPage;\n\n  const handleClickPrev = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    if (currentPage !== 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleClickNext = (event: React.MouseEvent<HTMLAnchorElement>) => {\n    event.preventDefault();\n    if (currentPage !== lastPage) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', { disabled: isFirstPage })}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={handleClickPrev}\n        >\n          «\n        </a>\n      </li>\n\n      {getNumbers(1, lastPage).map(page => (\n        <li\n          className={classNames('page-item', {\n            active: currentPage === page,\n          })}\n          key={page}\n\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={(event) => {\n              event.preventDefault();\n              onPageChange(page);\n            }}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={classNames(\n        'page-item',\n        { disabled: isLastPage },\n      )}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isLastPage}\n          onClick={handleClickNext}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n\nPagination.defaultProps = {\n  currentPage: 1,\n};\n","import React, { useState } from 'react';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination/Pagination';\nimport './App.css';\n\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const total = items.length;\n  const firstLiItem = perPage * (currentPage - 1) + 1;\n  const lastLiItem = perPage * currentPage < total\n    ? perPage * currentPage\n    : total;\n  const itemsPerPage = getNumbers(firstLiItem, lastLiItem);\n  const options = [3, 5, 10, 20];\n\n  const onSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const onPageChange = (page: number) => {\n    setCurrentPage(page);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstLiItem} - ${lastLiItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={onSelect}\n          >\n            {options.map(option => (\n              <option value={option} key={option}>{option}</option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n\n      <ul>\n        {itemsPerPage.map((item) => (\n          <li data-cy=\"item\" key={item}>{`Item ${item}`}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}